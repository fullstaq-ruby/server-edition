<%= editing_warning_comment('ci-cd-build-packages') %>

name: 'CI/CD: build packages [<%= part_number %>]'

on:
  workflow_call:
    inputs:
      ci_artifacts_run_number:
        required: true
        type: string
      necessary_jobs:
        required: true
        type: string

env:
  CI_ARTIFACTS_RUN_NUMBER: ${{ inputs.ci_artifacts_run_number }}
  CACHE_CONTAINER: server-edition-ci-cache

jobs:
  ### Jemalloc ###

  <%- distributions.each do |distribution| %>
  <%- architectures.each do |arch| %>
  <%- unindent(2) do -%>
    build_jemalloc_<%= slug(distribution[:name]) %>_<%= arch %>:
      name: 'Jemalloc [<%= distribution[:name] %>/<%= arch %>]'
      if: contains(inputs.necessary_jobs, ';Build Jemalloc [<%= distribution[:name] %>/<%= arch %>];')
      runs-on: <%= arch == 'arm64' ? 'ubuntu-24.04-arm' : 'ubuntu-24.04' %>
      environment: test
      permissions:
        id-token: write
        packages: read
      steps:
        - uses: actions/checkout@v5
        - uses: google-github-actions/auth@v3
          with:
            project_id: ${{ vars.GCLOUD_PROJECT_ID }}
            workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@v3
          with:
            version: '>= 363.0.0'
        - name: Login to Github Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Dump Azure connection string
          run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
          env:
            CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}

        - name: Download Docker image necessary for building
          run: ./internal-scripts/ci-cd/download-artifact.sh
          if: contains(inputs.necessary_jobs, ';Use locally-built Docker image <%= distribution[:name] %>;')
          env:
            ARTIFACT_NAME: '<%= docker_image_artifact_name(distribution[:name]) %>-<%= arch %>'
            ARTIFACT_PATH: .
            CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
        - name: Load Docker image necessary for building
          run: ./internal-scripts/ci-cd/load-docker-image.sh
          if: contains(inputs.necessary_jobs, ';Use locally-built Docker image <%= distribution[:name] %>;')
          env:
            TARBALL: image.tar.zst

        - run: mkdir cache

        - name: Download source
          run: ./internal-scripts/ci-cd/build-jemalloc-binaries/download-source.sh
          env:
            JEMALLOC_VERSION: "<%= jemalloc_version %>"

        - name: Build
          run: ./internal-scripts/ci-cd/build-jemalloc-binaries/build.sh
          env:
            ENVIRONMENT_NAME: "<%= distribution[:name] %>"
            CACHE_KEY_PREFIX: "sccache/<%= distribution[:name] %>/<%= arch %>"

        - name: Archive artifact
          run: ./internal-scripts/ci-cd/upload-artifact.sh
          env:
            ARTIFACT_NAME: 'jemalloc-bin-<%= distribution[:name] %>-<%= arch %>'
            ARTIFACT_PATH: output
            CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
  <%- end -%>
  <%- end -%>
  <%- end %>


  ### Ruby ###

  <%- distributions.each do |distribution| %>
  <%- ruby_package_versions_for_distro(distribution).each do |ruby_package_version| -%>
  <%- variants.each do |variant| -%>
  <%- architectures.each do |arch| -%>
  <%- unindent(2) do %>
    build_ruby_<%= slug(distribution[:name]) %>-<%= slug(ruby_package_version[:id]) %>-<%= slug(variant[:name]) %>_<%= arch %>:
      name: 'Ruby [<%= distribution[:name] %>/<%= ruby_package_version[:id] %>/<%= variant[:name] %>/<%= arch %>]'
      <%- if variant[:name] == 'jemalloc' %>
      <%- unindent(2) do -%>
        needs: build_jemalloc_<%= slug(distribution[:name]) %>_<%= arch %>
      <%- end -%>
      <%- end %>
      runs-on: <%= arch == 'arm64' ? 'ubuntu-24.04-arm' : 'ubuntu-24.04' %>
      environment: test
      timeout-minutes: 30
      permissions:
        id-token: write
        packages: read
      # Run even if a dependent job has been skipped
      if: |
        contains(inputs.necessary_jobs, ';Build Ruby [<%= distribution[:name] %>/<%= ruby_package_version[:id] %>/<%= variant[:name] %>/<%= arch %>];')
        && !failure() && !cancelled()
      steps:
        <%- if variant[:name] == 'jemalloc' -%>
        <%- unindent(2) do -%>
          - name: Check whether 'Build Jemalloc [<%= distribution[:name] %>/<%= arch %>]' did not fail
            run: 'false'
            if: |
              needs.build_jemalloc_<%= slug(distribution[:name]) %>_<%= arch %>.result == 'skipped'
              && contains(inputs.necessary_jobs, ';Build Jemalloc [<%= distribution[:name] %>/<%= arch %>];')
        <%- end -%>
        <%- end %>

        - uses: actions/checkout@v5
        - uses: google-github-actions/auth@v3
          with:
            project_id: ${{ vars.GCLOUD_PROJECT_ID }}
            workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@v3
          with:
            version: '>= 363.0.0'
        - name: Login to Github Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Dump Azure connection string
          run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
          env:
            CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
        - name: Fetch Ruby source
          run: ./internal-scripts/ci-cd/download-artifact.sh
          env:
            ARTIFACT_NAME: <%= ruby_source_artifact_name(ruby_package_version[:full_version]) %>
            ARTIFACT_PATH: .
            CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

        - name: Download Docker image necessary for building
          run: ./internal-scripts/ci-cd/download-artifact.sh
          if: contains(inputs.necessary_jobs, ';Use locally-built Docker image <%= distribution[:name] %>;')
          env:
            ARTIFACT_NAME: '<%= docker_image_artifact_name(distribution[:name]) %>-<%= arch %>'
            ARTIFACT_PATH: .
            CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
        - name: Load Docker image necessary for building
          run: ./internal-scripts/ci-cd/load-docker-image.sh
          if: contains(inputs.necessary_jobs, ';Use locally-built Docker image <%= distribution[:name] %>;')
          env:
            TARBALL: image.tar.zst

        - name: Download Docker image necessary for packaging
          run: ./internal-scripts/ci-cd/download-artifact.sh
          if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
          env:
            ARTIFACT_NAME: <%= docker_image_artifact_name('utility') %>-<%= arch %>
            ARTIFACT_PATH: .
            CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
        - name: Load Docker image necessary for packaging
          run: ./internal-scripts/ci-cd/load-docker-image.sh
          if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
          env:
            TARBALL: image.tar.zst

        <%- if variant[:name] == 'jemalloc' -%>
        <%- unindent(2) do -%>
          - name: Fetch Jemalloc binary
            run: ./internal-scripts/ci-cd/download-artifact.sh
            env:
              ARTIFACT_NAME: jemalloc-bin-<%= distribution[:name] %>-<%= arch %>
              ARTIFACT_PATH: .
              CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
        <%- end -%>
        <%- end %>

        - name: Build binaries
          run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
          env:
            ENVIRONMENT_NAME: "<%= distribution[:name] %>"
            VARIANT_NAME: "<%= variant[:name] %>"
            RUBY_PACKAGE_VERSION_ID: "<%= ruby_package_version[:id] %>"
            CACHE_KEY_PREFIX: "sccache/<%= distribution[:name] %>/<%= arch %>"

        - name: Build package
          run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
          env:
            DISTRIBUTION_NAME: "<%= distribution[:name] %>"
            VARIANT_NAME: "<%= variant[:name] %>"
            VARIANT_PACKAGE_SUFFIX: "<%= variant[:package_suffix] %>"
            PACKAGE_FORMAT: "<%= distribution[:package_format] %>"
            RUBY_PACKAGE_VERSION_ID: "<%= ruby_package_version[:id] %>"
            RUBY_PACKAGE_REVISION: "<%= ruby_package_version[:package_revision] %>"
            ARCH: "<%= arch %>"

        - name: Archive package artifact to Google Cloud
          run: ./internal-scripts/ci-cd/upload-artifact.sh
          env:
            ARTIFACT_NAME: "<%= ruby_package_artifact_name(ruby_package_version, distribution, variant, arch) %>"
            ARTIFACT_PATH: output-<%= variant[:name] %>
            CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
  <%- end %>
  <%- end -%>
  <%- end -%>
  <%- end %>
  <%- end -%>


  ### Finalize ###

  finalize:
    name: Finalize
    needs:
      <%- distributions.each do |distribution| -%>
      <%- unindent(2) do %>
        <%- architectures.each do |arch| -%>
        - build_jemalloc_<%= slug(distribution[:name]) %>_<%= arch %>
        <%- end -%>
        <%- ruby_package_versions_for_distro(distribution).each do |ruby_package_version| %>
        <%- variants.each do |variant| -%>
        <%- architectures.each do |arch| -%>
        - build_ruby_<%= slug(distribution[:name]) %>-<%= slug(ruby_package_version[:id]) %>-<%= slug(variant[:name]) %>_<%= arch %>
        <%- end -%>
        <%- end -%>
        <%- end %>
      <%- end %>
      <%- end -%>
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    if: 'always()'
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - uses: google-github-actions/auth@v3
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v3
        with:
          version: '>= 363.0.0'


      ### Publish all artifacts in Google Cloud as Github Actions artifacts ###
      # We publish these artifacts in a dedicated job instead
      # of in each job individually, because the individual jobs
      # could be skipped during a re-run.

      - name: Download Jemalloc binary artifacts from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifacts.sh
        env:
          ARTIFACT_NAMES: |
            <%- distributions.each do |distribution| -%>
            <%- architectures.each do |arch| -%>
            jemalloc-bin-<%= distribution[:name] %>-<%= arch %>
            <%- end -%>
            <%- end -%>
          ARTIFACT_PATH: artifacts
          CLEAR: true
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      <%- distributions.each do |distribution| -%>
      <%- architectures.each do |arch| -%>
      - name: Archive Jemalloc binary artifact [<%= distribution[:name] %>/<%= arch %>] to Github
        uses: actions/upload-artifact@v4
        with:
          name: 'jemalloc-bin-<%= distribution[:name] %>-<%= arch %>'
          path: 'artifacts/jemalloc-bin-<%= distribution[:name] %>-<%= arch %>'
          compression-level: 0
      <%- end -%>
      <%- end -%>

      - name: Download Ruby package artifacts from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifacts.sh
        env:
          ARTIFACT_NAMES: '<%= ruby_package_artifact_names.join(' ') %>'
          ARTIFACT_PATH: artifacts
          CLEAR: true
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      <%- ruby_package_artifact_names.each do |artifact_name| -%>
      - name: Archive Ruby package artifact [<%= artifact_name %>] to Github
        uses: actions/upload-artifact@v4
        with:
          name: <%= artifact_name %>
          path: artifacts/<%= artifact_name %>
          compression-level: 0
      <%- end -%>


      ### Check whether dependent jobs failed ###

      - name: Check whether 'Jemalloc' job did not fail
        run: 'false'
        if: |
          false
          <%- distributions.each do |distribution| -%>
          <%- architectures.each do |arch| -%>
            || (needs.build_jemalloc_<%= slug(distribution[:name]) %>_<%= arch %>.result != 'success'
              && (needs.build_jemalloc_<%= slug(distribution[:name]) %>_<%= arch %>.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Jemalloc [<%= distribution[:name] %>/<%= arch %>];')))
          <%- end -%>
          <%- end -%>
      <%- distributions.each do |distribution| -%>
      - name: Check whether 'Ruby [<%= distribution[:name] %>]' job did not fail
        run: 'false'
        if: |
          false
          <%- ruby_package_versions_for_distro(distribution).each do |ruby_package_version| -%>
          <%- variants.each do |variant| -%>
          <%- architectures.each do |arch| -%>
            || (needs.build_ruby_<%= slug(distribution[:name]) %>-<%= slug(ruby_package_version[:id]) %>-<%= slug(variant[:name]) %>_<%= arch %>.result != 'success'
              && (needs.build_ruby_<%= slug(distribution[:name]) %>-<%= slug(ruby_package_version[:id]) %>-<%= slug(variant[:name]) %>_<%= arch %>.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [<%= distribution[:name] %>/<%= ruby_package_version[:id] %>/<%= variant[:name] %>];')))
          <%- end -%>
          <%- end -%>
          <%- end -%>
      <%- end -%>
