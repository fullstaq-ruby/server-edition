# WARNING: DO NOT EDIT THIS FILE!!!
#
# This file is autogenerated from .github/workflows/ci-cd-build-packages.yml.erb
# by ./internal-scripts/generate-ci-cd-yaml.rb.
# Please edit the .erb file instead, then regenerate YAML
# by running that script.
#
# TIP: run this on your development machine to ensure generate-ci-cd-yaml.rb
# is run automatically as a Git pre-commit hook:
#
#   git config core.hooksPath .githooks

name: 'CI/CD: build packages [1]'

on:
  workflow_call:
    inputs:
      ci_artifacts_run_number:
        required: true
        type: string
      necessary_jobs:
        required: true
        type: string

env:
  CI_ARTIFACTS_RUN_NUMBER: ${{ inputs.ci_artifacts_run_number }}
  CACHE_CONTAINER: server-edition-ci-cache

jobs:
  ### Jemalloc ###


  build_jemalloc_centos_8:
    name: 'Jemalloc [centos-8]'
    if: contains(inputs.necessary_jobs, ';Build Jemalloc [centos-8];')
    runs-on: ubuntu-24.04
    environment: test
    permissions:
      id-token: write
      packages: read
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - run: mkdir cache

      - name: Download source
        run: ./internal-scripts/ci-cd/build-jemalloc-binaries/download-source.sh
        env:
          JEMALLOC_VERSION: "3.6.0"

      - name: Build
        run: ./internal-scripts/ci-cd/build-jemalloc-binaries/build.sh
        env:
          ENVIRONMENT_NAME: 'centos-8'
          CACHE_KEY_PREFIX: 'sccache/centos-8'

      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: 'jemalloc-bin-centos-8'
          ARTIFACT_PATH: output
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
  build_jemalloc_el_9:
    name: 'Jemalloc [el-9]'
    if: contains(inputs.necessary_jobs, ';Build Jemalloc [el-9];')
    runs-on: ubuntu-24.04
    environment: test
    permissions:
      id-token: write
      packages: read
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - run: mkdir cache

      - name: Download source
        run: ./internal-scripts/ci-cd/build-jemalloc-binaries/download-source.sh
        env:
          JEMALLOC_VERSION: "3.6.0"

      - name: Build
        run: ./internal-scripts/ci-cd/build-jemalloc-binaries/build.sh
        env:
          ENVIRONMENT_NAME: 'el-9'
          CACHE_KEY_PREFIX: 'sccache/el-9'

      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: 'jemalloc-bin-el-9'
          ARTIFACT_PATH: output
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}


  ### Ruby ###



  build_ruby_centos_8-3_4-normal:
    name: 'Ruby [centos-8/3.4/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          RUBY_PACKAGE_REVISION: "1"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4_centos-8_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_4-jemalloc:
    name: 'Ruby [centos-8/3.4/jemalloc]'

    needs: build_jemalloc_centos_8
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [centos-8]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_centos_8.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [centos-8];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-centos-8
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          RUBY_PACKAGE_REVISION: "1"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4_centos-8_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_4-malloctrim:
    name: 'Ruby [centos-8/3.4/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          RUBY_PACKAGE_REVISION: "1"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4_centos-8_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_3-normal:
    name: 'Ruby [centos-8/3.3/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          RUBY_PACKAGE_REVISION: "7"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3_centos-8_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_3-jemalloc:
    name: 'Ruby [centos-8/3.3/jemalloc]'

    needs: build_jemalloc_centos_8
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [centos-8]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_centos_8.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [centos-8];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-centos-8
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          RUBY_PACKAGE_REVISION: "7"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3_centos-8_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_3-malloctrim:
    name: 'Ruby [centos-8/3.3/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          RUBY_PACKAGE_REVISION: "7"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3_centos-8_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_2-normal:
    name: 'Ruby [centos-8/3.2/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          RUBY_PACKAGE_REVISION: "9"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2_centos-8_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_2-jemalloc:
    name: 'Ruby [centos-8/3.2/jemalloc]'

    needs: build_jemalloc_centos_8
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [centos-8]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_centos_8.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [centos-8];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-centos-8
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          RUBY_PACKAGE_REVISION: "9"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2_centos-8_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_2-malloctrim:
    name: 'Ruby [centos-8/3.2/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          RUBY_PACKAGE_REVISION: "9"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2_centos-8_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_4_2-normal:
    name: 'Ruby [centos-8/3.4.2/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4.2/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4.2_centos-8_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_4_2-jemalloc:
    name: 'Ruby [centos-8/3.4.2/jemalloc]'

    needs: build_jemalloc_centos_8
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4.2/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [centos-8]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_centos_8.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [centos-8];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-centos-8
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4.2_centos-8_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_4_2-malloctrim:
    name: 'Ruby [centos-8/3.4.2/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4.2/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4.2_centos-8_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_3_7-normal:
    name: 'Ruby [centos-8/3.3.7/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3.7/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3.7_centos-8_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_3_7-jemalloc:
    name: 'Ruby [centos-8/3.3.7/jemalloc]'

    needs: build_jemalloc_centos_8
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3.7/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [centos-8]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_centos_8.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [centos-8];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-centos-8
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3.7_centos-8_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_3_7-malloctrim:
    name: 'Ruby [centos-8/3.3.7/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3.7/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3.7_centos-8_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_2_6-normal:
    name: 'Ruby [centos-8/3.2.6/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2.6/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2.6_centos-8_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_2_6-jemalloc:
    name: 'Ruby [centos-8/3.2.6/jemalloc]'

    needs: build_jemalloc_centos_8
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2.6/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [centos-8]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_centos_8.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [centos-8];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-centos-8
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2.6_centos-8_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_centos_8-3_2_6-malloctrim:
    name: 'Ruby [centos-8/3.2.6/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2.6/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image centos-8;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          CACHE_KEY_PREFIX: "sccache/centos-8"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2.6_centos-8_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}


  build_ruby_el_9-3_4-normal:
    name: 'Ruby [el-9/3.4/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          RUBY_PACKAGE_REVISION: "1"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4_el-9_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_4-jemalloc:
    name: 'Ruby [el-9/3.4/jemalloc]'

    needs: build_jemalloc_el_9
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [el-9]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_el_9.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [el-9];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-el-9
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          RUBY_PACKAGE_REVISION: "1"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4_el-9_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_4-malloctrim:
    name: 'Ruby [el-9/3.4/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4"
          RUBY_PACKAGE_REVISION: "1"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4_el-9_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_3-normal:
    name: 'Ruby [el-9/3.3/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          RUBY_PACKAGE_REVISION: "7"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3_el-9_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_3-jemalloc:
    name: 'Ruby [el-9/3.3/jemalloc]'

    needs: build_jemalloc_el_9
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [el-9]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_el_9.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [el-9];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-el-9
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          RUBY_PACKAGE_REVISION: "7"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3_el-9_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_3-malloctrim:
    name: 'Ruby [el-9/3.3/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3"
          RUBY_PACKAGE_REVISION: "7"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3_el-9_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_2-normal:
    name: 'Ruby [el-9/3.2/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          RUBY_PACKAGE_REVISION: "9"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2_el-9_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_2-jemalloc:
    name: 'Ruby [el-9/3.2/jemalloc]'

    needs: build_jemalloc_el_9
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [el-9]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_el_9.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [el-9];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-el-9
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          RUBY_PACKAGE_REVISION: "9"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2_el-9_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_2-malloctrim:
    name: 'Ruby [el-9/3.2/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2"
          RUBY_PACKAGE_REVISION: "9"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2_el-9_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_1-normal:
    name: 'Ruby [el-9/3.1/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.1.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.1"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.1"
          RUBY_PACKAGE_REVISION: "15"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.1_el-9_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_1-jemalloc:
    name: 'Ruby [el-9/3.1/jemalloc]'

    needs: build_jemalloc_el_9
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [el-9]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_el_9.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [el-9];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.1.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-el-9
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.1"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.1"
          RUBY_PACKAGE_REVISION: "15"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.1_el-9_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_1-malloctrim:
    name: 'Ruby [el-9/3.1/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.1.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.1"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.1"
          RUBY_PACKAGE_REVISION: "15"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.1_el-9_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_4_2-normal:
    name: 'Ruby [el-9/3.4.2/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4.2/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4.2_el-9_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_4_2-jemalloc:
    name: 'Ruby [el-9/3.4.2/jemalloc]'

    needs: build_jemalloc_el_9
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4.2/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [el-9]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_el_9.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [el-9];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-el-9
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4.2_el-9_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_4_2-malloctrim:
    name: 'Ruby [el-9/3.4.2/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4.2/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.4.2
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.4.2"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.4.2_el-9_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_3_7-normal:
    name: 'Ruby [el-9/3.3.7/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3.7/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3.7_el-9_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_3_7-jemalloc:
    name: 'Ruby [el-9/3.3.7/jemalloc]'

    needs: build_jemalloc_el_9
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3.7/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [el-9]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_el_9.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [el-9];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-el-9
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3.7_el-9_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_3_7-malloctrim:
    name: 'Ruby [el-9/3.3.7/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3.7/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.3.7
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.3.7"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.3.7_el-9_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_2_6-normal:
    name: 'Ruby [el-9/3.2.6/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2.6/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2.6_el-9_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_2_6-jemalloc:
    name: 'Ruby [el-9/3.2.6/jemalloc]'

    needs: build_jemalloc_el_9
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2.6/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [el-9]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_el_9.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [el-9];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-el-9
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2.6_el-9_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_2_6-malloctrim:
    name: 'Ruby [el-9/3.2.6/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2.6/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.2.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.2.6"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.2.6_el-9_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_1_6-normal:
    name: 'Ruby [el-9/3.1.6/normal]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1.6/normal];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.1.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "normal"
          RUBY_PACKAGE_VERSION_ID: "3.1.6"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.1.6"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.1.6_el-9_normal"
          ARTIFACT_PATH: output-normal
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_1_6-jemalloc:
    name: 'Ruby [el-9/3.1.6/jemalloc]'

    needs: build_jemalloc_el_9
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1.6/jemalloc];')
      && !failure() && !cancelled()
    steps:
      
      - name: Check whether 'Build Jemalloc [el-9]' did not fail
        run: 'false'
        if: |
          needs.build_jemalloc_el_9.result == 'skipped'
          && contains(inputs.necessary_jobs, ';Build Jemalloc [el-9];')        

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.1.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      
      - name: Fetch Jemalloc binary
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: jemalloc-bin-el-9
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}        

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          RUBY_PACKAGE_VERSION_ID: "3.1.6"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "jemalloc"
          VARIANT_PACKAGE_SUFFIX: "-jemalloc"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.1.6"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.1.6_el-9_jemalloc"
          ARTIFACT_PATH: output-jemalloc
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

  build_ruby_el_9-3_1_6-malloctrim:
    name: 'Ruby [el-9/3.1.6/malloctrim]'

    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    permissions:
      id-token: write
      packages: read
    # Run even if a dependent job has been skipped
    if: |
      contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1.6/malloctrim];')
      && !failure() && !cancelled()
    steps:
      

      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'
      - name: Login to Github Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} --password-stdin <<<"$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump Azure connection string
        run: echo -n "$CONNECTION_STRING" > azure-connection-string.txt
        env:
          CONNECTION_STRING: ${{ secrets.AZURE_CI2_STORAGE_CONNECTION_STRING }}
      - name: Fetch Ruby source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.1.6
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}

      - name: Download Docker image necessary for building
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          ARTIFACT_NAME: 'docker-image-el-9'
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for building
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image el-9;')
        env:
          TARBALL: image.tar.zst

      - name: Download Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Load Docker image necessary for packaging
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(inputs.necessary_jobs, ';Use locally-built Docker image utility;')
        env:
          TARBALL: image.tar.zst

      

      - name: Build binaries
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-binaries.sh
        env:
          ENVIRONMENT_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          RUBY_PACKAGE_VERSION_ID: "3.1.6"
          CACHE_KEY_PREFIX: "sccache/el-9"

      - name: Build package
        run: ./internal-scripts/ci-cd/build-ruby-packages/build-package.sh
        env:
          DISTRIBUTION_NAME: "el-9"
          VARIANT_NAME: "malloctrim"
          VARIANT_PACKAGE_SUFFIX: "-malloctrim"
          PACKAGE_FORMAT: "RPM"
          RUBY_PACKAGE_VERSION_ID: "3.1.6"
          RUBY_PACKAGE_REVISION: "0"

      - name: Archive package artifact to Google Cloud
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: "ruby-pkg_3.1.6_el-9_malloctrim"
          ARTIFACT_PATH: output-malloctrim
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}



  ### Finalize ###

  finalize:
    name: Finalize
    needs:

      - build_jemalloc_centos_8

      - build_ruby_centos_8-3_4-normal
      - build_ruby_centos_8-3_4-jemalloc
      - build_ruby_centos_8-3_4-malloctrim

      - build_ruby_centos_8-3_3-normal
      - build_ruby_centos_8-3_3-jemalloc
      - build_ruby_centos_8-3_3-malloctrim

      - build_ruby_centos_8-3_2-normal
      - build_ruby_centos_8-3_2-jemalloc
      - build_ruby_centos_8-3_2-malloctrim

      - build_ruby_centos_8-3_4_2-normal
      - build_ruby_centos_8-3_4_2-jemalloc
      - build_ruby_centos_8-3_4_2-malloctrim

      - build_ruby_centos_8-3_3_7-normal
      - build_ruby_centos_8-3_3_7-jemalloc
      - build_ruby_centos_8-3_3_7-malloctrim

      - build_ruby_centos_8-3_2_6-normal
      - build_ruby_centos_8-3_2_6-jemalloc
      - build_ruby_centos_8-3_2_6-malloctrim

      - build_jemalloc_el_9

      - build_ruby_el_9-3_4-normal
      - build_ruby_el_9-3_4-jemalloc
      - build_ruby_el_9-3_4-malloctrim

      - build_ruby_el_9-3_3-normal
      - build_ruby_el_9-3_3-jemalloc
      - build_ruby_el_9-3_3-malloctrim

      - build_ruby_el_9-3_2-normal
      - build_ruby_el_9-3_2-jemalloc
      - build_ruby_el_9-3_2-malloctrim

      - build_ruby_el_9-3_1-normal
      - build_ruby_el_9-3_1-jemalloc
      - build_ruby_el_9-3_1-malloctrim

      - build_ruby_el_9-3_4_2-normal
      - build_ruby_el_9-3_4_2-jemalloc
      - build_ruby_el_9-3_4_2-malloctrim

      - build_ruby_el_9-3_3_7-normal
      - build_ruby_el_9-3_3_7-jemalloc
      - build_ruby_el_9-3_3_7-malloctrim

      - build_ruby_el_9-3_2_6-normal
      - build_ruby_el_9-3_2_6-jemalloc
      - build_ruby_el_9-3_2_6-malloctrim

      - build_ruby_el_9-3_1_6-normal
      - build_ruby_el_9-3_1_6-jemalloc
      - build_ruby_el_9-3_1_6-malloctrim
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    if: 'always()'
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCLOUD_PROJECT_ID }}
          workload_identity_provider: projects/${{ vars.GCLOUD_PROJECT_NUM }}/locations/global/workloadIdentityPools/github-ci-test/providers/github-ci-test
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 363.0.0'


      ### Publish all artifacts in Google Cloud as Github Actions artifacts ###
      # We publish these artifacts in a dedicated job instead
      # of in each job individually, because the individual jobs
      # could be skipped during a re-run.

      - name: Download Jemalloc binary artifacts from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifacts.sh
        env:
          ARTIFACT_NAMES: |
            jemalloc-bin-centos-8
            jemalloc-bin-el-9
          ARTIFACT_PATH: artifacts
          CLEAR: true
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Archive Jemalloc binary artifact [centos-8] to Github
        uses: actions/upload-artifact@v4
        with:
          name: 'jemalloc-bin-centos-8'
          path: 'artifacts/jemalloc-bin-centos-8'
          compression-level: 0
      - name: Archive Jemalloc binary artifact [el-9] to Github
        uses: actions/upload-artifact@v4
        with:
          name: 'jemalloc-bin-el-9'
          path: 'artifacts/jemalloc-bin-el-9'
          compression-level: 0

      - name: Download Ruby package artifacts from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifacts.sh
        env:
          ARTIFACT_NAMES: 'ruby-pkg_3.4_centos-8_normal ruby-pkg_3.4_centos-8_jemalloc ruby-pkg_3.4_centos-8_malloctrim ruby-pkg_3.3_centos-8_normal ruby-pkg_3.3_centos-8_jemalloc ruby-pkg_3.3_centos-8_malloctrim ruby-pkg_3.2_centos-8_normal ruby-pkg_3.2_centos-8_jemalloc ruby-pkg_3.2_centos-8_malloctrim ruby-pkg_3.4.2_centos-8_normal ruby-pkg_3.4.2_centos-8_jemalloc ruby-pkg_3.4.2_centos-8_malloctrim ruby-pkg_3.3.7_centos-8_normal ruby-pkg_3.3.7_centos-8_jemalloc ruby-pkg_3.3.7_centos-8_malloctrim ruby-pkg_3.2.6_centos-8_normal ruby-pkg_3.2.6_centos-8_jemalloc ruby-pkg_3.2.6_centos-8_malloctrim ruby-pkg_3.4_el-9_normal ruby-pkg_3.4_el-9_jemalloc ruby-pkg_3.4_el-9_malloctrim ruby-pkg_3.3_el-9_normal ruby-pkg_3.3_el-9_jemalloc ruby-pkg_3.3_el-9_malloctrim ruby-pkg_3.2_el-9_normal ruby-pkg_3.2_el-9_jemalloc ruby-pkg_3.2_el-9_malloctrim ruby-pkg_3.1_el-9_normal ruby-pkg_3.1_el-9_jemalloc ruby-pkg_3.1_el-9_malloctrim ruby-pkg_3.4.2_el-9_normal ruby-pkg_3.4.2_el-9_jemalloc ruby-pkg_3.4.2_el-9_malloctrim ruby-pkg_3.3.7_el-9_normal ruby-pkg_3.3.7_el-9_jemalloc ruby-pkg_3.3.7_el-9_malloctrim ruby-pkg_3.2.6_el-9_normal ruby-pkg_3.2.6_el-9_jemalloc ruby-pkg_3.2.6_el-9_malloctrim ruby-pkg_3.1.6_el-9_normal ruby-pkg_3.1.6_el-9_jemalloc ruby-pkg_3.1.6_el-9_malloctrim'
          ARTIFACT_PATH: artifacts
          CLEAR: true
          CI_ARTIFACTS_BUCKET: ${{ vars.CI_ARTIFACTS_BUCKET }}
      - name: Archive Ruby package artifact [ruby-pkg_3.4_centos-8_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4_centos-8_normal
          path: artifacts/ruby-pkg_3.4_centos-8_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4_centos-8_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4_centos-8_jemalloc
          path: artifacts/ruby-pkg_3.4_centos-8_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4_centos-8_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4_centos-8_malloctrim
          path: artifacts/ruby-pkg_3.4_centos-8_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3_centos-8_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3_centos-8_normal
          path: artifacts/ruby-pkg_3.3_centos-8_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3_centos-8_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3_centos-8_jemalloc
          path: artifacts/ruby-pkg_3.3_centos-8_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3_centos-8_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3_centos-8_malloctrim
          path: artifacts/ruby-pkg_3.3_centos-8_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2_centos-8_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2_centos-8_normal
          path: artifacts/ruby-pkg_3.2_centos-8_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2_centos-8_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2_centos-8_jemalloc
          path: artifacts/ruby-pkg_3.2_centos-8_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2_centos-8_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2_centos-8_malloctrim
          path: artifacts/ruby-pkg_3.2_centos-8_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4.2_centos-8_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4.2_centos-8_normal
          path: artifacts/ruby-pkg_3.4.2_centos-8_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4.2_centos-8_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4.2_centos-8_jemalloc
          path: artifacts/ruby-pkg_3.4.2_centos-8_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4.2_centos-8_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4.2_centos-8_malloctrim
          path: artifacts/ruby-pkg_3.4.2_centos-8_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3.7_centos-8_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3.7_centos-8_normal
          path: artifacts/ruby-pkg_3.3.7_centos-8_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3.7_centos-8_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3.7_centos-8_jemalloc
          path: artifacts/ruby-pkg_3.3.7_centos-8_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3.7_centos-8_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3.7_centos-8_malloctrim
          path: artifacts/ruby-pkg_3.3.7_centos-8_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2.6_centos-8_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2.6_centos-8_normal
          path: artifacts/ruby-pkg_3.2.6_centos-8_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2.6_centos-8_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2.6_centos-8_jemalloc
          path: artifacts/ruby-pkg_3.2.6_centos-8_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2.6_centos-8_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2.6_centos-8_malloctrim
          path: artifacts/ruby-pkg_3.2.6_centos-8_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4_el-9_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4_el-9_normal
          path: artifacts/ruby-pkg_3.4_el-9_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4_el-9_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4_el-9_jemalloc
          path: artifacts/ruby-pkg_3.4_el-9_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4_el-9_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4_el-9_malloctrim
          path: artifacts/ruby-pkg_3.4_el-9_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3_el-9_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3_el-9_normal
          path: artifacts/ruby-pkg_3.3_el-9_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3_el-9_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3_el-9_jemalloc
          path: artifacts/ruby-pkg_3.3_el-9_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3_el-9_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3_el-9_malloctrim
          path: artifacts/ruby-pkg_3.3_el-9_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2_el-9_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2_el-9_normal
          path: artifacts/ruby-pkg_3.2_el-9_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2_el-9_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2_el-9_jemalloc
          path: artifacts/ruby-pkg_3.2_el-9_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2_el-9_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2_el-9_malloctrim
          path: artifacts/ruby-pkg_3.2_el-9_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.1_el-9_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.1_el-9_normal
          path: artifacts/ruby-pkg_3.1_el-9_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.1_el-9_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.1_el-9_jemalloc
          path: artifacts/ruby-pkg_3.1_el-9_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.1_el-9_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.1_el-9_malloctrim
          path: artifacts/ruby-pkg_3.1_el-9_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4.2_el-9_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4.2_el-9_normal
          path: artifacts/ruby-pkg_3.4.2_el-9_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4.2_el-9_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4.2_el-9_jemalloc
          path: artifacts/ruby-pkg_3.4.2_el-9_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.4.2_el-9_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.4.2_el-9_malloctrim
          path: artifacts/ruby-pkg_3.4.2_el-9_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3.7_el-9_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3.7_el-9_normal
          path: artifacts/ruby-pkg_3.3.7_el-9_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3.7_el-9_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3.7_el-9_jemalloc
          path: artifacts/ruby-pkg_3.3.7_el-9_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.3.7_el-9_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.3.7_el-9_malloctrim
          path: artifacts/ruby-pkg_3.3.7_el-9_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2.6_el-9_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2.6_el-9_normal
          path: artifacts/ruby-pkg_3.2.6_el-9_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2.6_el-9_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2.6_el-9_jemalloc
          path: artifacts/ruby-pkg_3.2.6_el-9_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.2.6_el-9_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.2.6_el-9_malloctrim
          path: artifacts/ruby-pkg_3.2.6_el-9_malloctrim
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.1.6_el-9_normal] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.1.6_el-9_normal
          path: artifacts/ruby-pkg_3.1.6_el-9_normal
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.1.6_el-9_jemalloc] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.1.6_el-9_jemalloc
          path: artifacts/ruby-pkg_3.1.6_el-9_jemalloc
          compression-level: 0
      - name: Archive Ruby package artifact [ruby-pkg_3.1.6_el-9_malloctrim] to Github
        uses: actions/upload-artifact@v4
        with:
          name: ruby-pkg_3.1.6_el-9_malloctrim
          path: artifacts/ruby-pkg_3.1.6_el-9_malloctrim
          compression-level: 0


      ### Check whether dependent jobs failed ###

      - name: Check whether 'Jemalloc' job did not fail
        run: 'false'
        if: |
          false
            || (needs.build_jemalloc_centos_8.result != 'success'
              && (needs.build_jemalloc_centos_8.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Jemalloc [centos-8];')))
            || (needs.build_jemalloc_el_9.result != 'success'
              && (needs.build_jemalloc_el_9.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Jemalloc [el-9];')))
      - name: Check whether 'Ruby [centos-8]' job did not fail
        run: 'false'
        if: |
          false
            || (needs.build_ruby_centos_8-3_4-normal.result != 'success'
              && (needs.build_ruby_centos_8-3_4-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4/normal];')))
            || (needs.build_ruby_centos_8-3_4-jemalloc.result != 'success'
              && (needs.build_ruby_centos_8-3_4-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4/jemalloc];')))
            || (needs.build_ruby_centos_8-3_4-malloctrim.result != 'success'
              && (needs.build_ruby_centos_8-3_4-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4/malloctrim];')))
            || (needs.build_ruby_centos_8-3_3-normal.result != 'success'
              && (needs.build_ruby_centos_8-3_3-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3/normal];')))
            || (needs.build_ruby_centos_8-3_3-jemalloc.result != 'success'
              && (needs.build_ruby_centos_8-3_3-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3/jemalloc];')))
            || (needs.build_ruby_centos_8-3_3-malloctrim.result != 'success'
              && (needs.build_ruby_centos_8-3_3-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3/malloctrim];')))
            || (needs.build_ruby_centos_8-3_2-normal.result != 'success'
              && (needs.build_ruby_centos_8-3_2-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2/normal];')))
            || (needs.build_ruby_centos_8-3_2-jemalloc.result != 'success'
              && (needs.build_ruby_centos_8-3_2-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2/jemalloc];')))
            || (needs.build_ruby_centos_8-3_2-malloctrim.result != 'success'
              && (needs.build_ruby_centos_8-3_2-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2/malloctrim];')))
            || (needs.build_ruby_centos_8-3_4_2-normal.result != 'success'
              && (needs.build_ruby_centos_8-3_4_2-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4.2/normal];')))
            || (needs.build_ruby_centos_8-3_4_2-jemalloc.result != 'success'
              && (needs.build_ruby_centos_8-3_4_2-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4.2/jemalloc];')))
            || (needs.build_ruby_centos_8-3_4_2-malloctrim.result != 'success'
              && (needs.build_ruby_centos_8-3_4_2-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.4.2/malloctrim];')))
            || (needs.build_ruby_centos_8-3_3_7-normal.result != 'success'
              && (needs.build_ruby_centos_8-3_3_7-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3.7/normal];')))
            || (needs.build_ruby_centos_8-3_3_7-jemalloc.result != 'success'
              && (needs.build_ruby_centos_8-3_3_7-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3.7/jemalloc];')))
            || (needs.build_ruby_centos_8-3_3_7-malloctrim.result != 'success'
              && (needs.build_ruby_centos_8-3_3_7-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.3.7/malloctrim];')))
            || (needs.build_ruby_centos_8-3_2_6-normal.result != 'success'
              && (needs.build_ruby_centos_8-3_2_6-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2.6/normal];')))
            || (needs.build_ruby_centos_8-3_2_6-jemalloc.result != 'success'
              && (needs.build_ruby_centos_8-3_2_6-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2.6/jemalloc];')))
            || (needs.build_ruby_centos_8-3_2_6-malloctrim.result != 'success'
              && (needs.build_ruby_centos_8-3_2_6-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [centos-8/3.2.6/malloctrim];')))
      - name: Check whether 'Ruby [el-9]' job did not fail
        run: 'false'
        if: |
          false
            || (needs.build_ruby_el_9-3_4-normal.result != 'success'
              && (needs.build_ruby_el_9-3_4-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4/normal];')))
            || (needs.build_ruby_el_9-3_4-jemalloc.result != 'success'
              && (needs.build_ruby_el_9-3_4-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4/jemalloc];')))
            || (needs.build_ruby_el_9-3_4-malloctrim.result != 'success'
              && (needs.build_ruby_el_9-3_4-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4/malloctrim];')))
            || (needs.build_ruby_el_9-3_3-normal.result != 'success'
              && (needs.build_ruby_el_9-3_3-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3/normal];')))
            || (needs.build_ruby_el_9-3_3-jemalloc.result != 'success'
              && (needs.build_ruby_el_9-3_3-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3/jemalloc];')))
            || (needs.build_ruby_el_9-3_3-malloctrim.result != 'success'
              && (needs.build_ruby_el_9-3_3-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3/malloctrim];')))
            || (needs.build_ruby_el_9-3_2-normal.result != 'success'
              && (needs.build_ruby_el_9-3_2-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2/normal];')))
            || (needs.build_ruby_el_9-3_2-jemalloc.result != 'success'
              && (needs.build_ruby_el_9-3_2-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2/jemalloc];')))
            || (needs.build_ruby_el_9-3_2-malloctrim.result != 'success'
              && (needs.build_ruby_el_9-3_2-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2/malloctrim];')))
            || (needs.build_ruby_el_9-3_1-normal.result != 'success'
              && (needs.build_ruby_el_9-3_1-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1/normal];')))
            || (needs.build_ruby_el_9-3_1-jemalloc.result != 'success'
              && (needs.build_ruby_el_9-3_1-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1/jemalloc];')))
            || (needs.build_ruby_el_9-3_1-malloctrim.result != 'success'
              && (needs.build_ruby_el_9-3_1-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1/malloctrim];')))
            || (needs.build_ruby_el_9-3_4_2-normal.result != 'success'
              && (needs.build_ruby_el_9-3_4_2-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4.2/normal];')))
            || (needs.build_ruby_el_9-3_4_2-jemalloc.result != 'success'
              && (needs.build_ruby_el_9-3_4_2-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4.2/jemalloc];')))
            || (needs.build_ruby_el_9-3_4_2-malloctrim.result != 'success'
              && (needs.build_ruby_el_9-3_4_2-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.4.2/malloctrim];')))
            || (needs.build_ruby_el_9-3_3_7-normal.result != 'success'
              && (needs.build_ruby_el_9-3_3_7-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3.7/normal];')))
            || (needs.build_ruby_el_9-3_3_7-jemalloc.result != 'success'
              && (needs.build_ruby_el_9-3_3_7-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3.7/jemalloc];')))
            || (needs.build_ruby_el_9-3_3_7-malloctrim.result != 'success'
              && (needs.build_ruby_el_9-3_3_7-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.3.7/malloctrim];')))
            || (needs.build_ruby_el_9-3_2_6-normal.result != 'success'
              && (needs.build_ruby_el_9-3_2_6-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2.6/normal];')))
            || (needs.build_ruby_el_9-3_2_6-jemalloc.result != 'success'
              && (needs.build_ruby_el_9-3_2_6-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2.6/jemalloc];')))
            || (needs.build_ruby_el_9-3_2_6-malloctrim.result != 'success'
              && (needs.build_ruby_el_9-3_2_6-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.2.6/malloctrim];')))
            || (needs.build_ruby_el_9-3_1_6-normal.result != 'success'
              && (needs.build_ruby_el_9-3_1_6-normal.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1.6/normal];')))
            || (needs.build_ruby_el_9-3_1_6-jemalloc.result != 'success'
              && (needs.build_ruby_el_9-3_1_6-jemalloc.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1.6/jemalloc];')))
            || (needs.build_ruby_el_9-3_1_6-malloctrim.result != 'success'
              && (needs.build_ruby_el_9-3_1_6-malloctrim.result != 'skipped'
                || contains(inputs.necessary_jobs, ';Build Ruby [el-9/3.1.6/malloctrim];')))
