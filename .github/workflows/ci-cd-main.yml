# WARNING: DO NOT EDIT THIS FILE!!!
#
# This file is autogenerated from .github/workflows/ci-cd-main.yml.erb
# by ./internal-scripts/generate-ci-cd-yaml.rb.
# Please edit the .erb file instead, then regenerate YAML
# by running that script.
#
# TIP: run this on your development machine to ensure generate-ci-cd-yaml.rb
# is run automatically as a Git pre-commit hook:
#
#   git config core.hooksPath .githooks

name: 'CI/CD: main'

on:
  workflow_dispatch:
    inputs:
      ci_artifacts_run_number:
        required: false
  push:
    paths-ignore:
      - '**.md'
      - 'dev-handbook/**'

env:
  BINTRAY_ORG: fullstaq
  CI_ARTIFACTS_BUCKET: fullstaq-ruby-server-edition-ci-artifacts
  ## Set the following variable to a specific number to make the
  ## Google Cloud artifact upload/download actions treat as
  ## if we're running the given CI run number. Useful for
  ## speeding up development of the CI itself, in order to
  ## avoid rebuilding.
  CI_ARTIFACTS_RUN_NUMBER: ${{ github.event.inputs.ci_artifacts_run_number || github.run_number }}

jobs:
  # Determines which jobs should be run, or (in case this is a re-run)
  # which jobs can be skipped this time because the last run succeeded.
  # We determine this by checking whether the artifacts produced by jobs
  # exist in this run.
  determine_necessary_jobs:
    name: Determine necessary jobs
    runs-on: ubuntu-20.04
    outputs:
      necessary_jobs: ${{ steps.check.outputs.necessary_jobs }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: List artifacts built in previous try of same CI run
        run: ./internal-scripts/ci-cd/determine-necessary-jobs/list-artifacts.sh

      - name: Determine necessary jobs
        id: check
        run: ./internal-scripts/ci-cd/determine-necessary-jobs/determine-necessary-jobs.rb


  check_workflow_uptodate:
    name: Check whether workflow is up-to-date
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Check
        run: ./internal-scripts/ci-cd/check-workflow-uptodate/check.sh


  check_version_numbers_need_bumping:
    name: Check whether any version numbers need to be changed
    needs:
      - determine_necessary_jobs
      - download_rbenv_source
    runs-on: ubuntu-20.04
    # Run even if a dependent job has been skipped
    if: '!failure() && !cancelled()'
    steps:
      - name: Check whether dependent jobs did not fail
        run: 'false'
        if: |
          needs.download_rbenv_source.result == 'skipped'
          && contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Download Rbenv source;')

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}
      - name: Fetch Rbenv source
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: rbenv-src
          ARTIFACT_PATH: .

      - name: Extract Rbenv source
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/extract-rbenv-source.sh
      - name: Determine latest release tag
        # Sets environment variable $LATEST_RELEASE_TAG
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/determine-latest-release-tag.sh

      - name: Check whether the Rbenv version in config.yml is correct
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/check-rbenv-version.sh
        if: '!cancelled()'
      - name: Check whether the Rbenv package revision needs to be changed
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/check-rbenv-package-revision.sh
        if: '!cancelled()'

      - name: Check whether the fullstaq-ruby-common Debian package version or revision needs to be changed
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/check-common-deb-version-revision.sh
        if: '!cancelled()'
      - name: Check whether the fullstaq-ruby-common RPM package version or revision needs to be changed
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/check-common-rpm-version-revision.sh
        if: '!cancelled()'

      - name: Check whether any Ruby package revisions need to be changed
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/check-ruby-package-revisions.sh
        if: '!cancelled()'

      - name: Check whether any minor Ruby package revisions need to be changed
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/check-minor-ruby-package-revisions.sh
        if: '!cancelled()'


  ### Docker images ###


  build_docker_image_centos_7:
    name: 'Build Docker image [centos-7]'
    runs-on: ubuntu-18.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image centos-7;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Build
        run: ./internal-scripts/ci-cd/build-docker-images/build.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-centos-7'
          IMAGE_TAG: '3'
          SOURCE_DIR: 'environments/centos-7'

      - name: Dump image
        run: ./internal-scripts/ci-cd/build-docker-images/dump-image.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-centos-7'
          IMAGE_TAG: '3'
      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: 'docker-image-centos-7'
          ARTIFACT_PATH: output

  build_docker_image_centos_8:
    name: 'Build Docker image [centos-8]'
    runs-on: ubuntu-18.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image centos-8;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Build
        run: ./internal-scripts/ci-cd/build-docker-images/build.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-centos-8'
          IMAGE_TAG: '1'
          SOURCE_DIR: 'environments/centos-8'

      - name: Dump image
        run: ./internal-scripts/ci-cd/build-docker-images/dump-image.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-centos-8'
          IMAGE_TAG: '1'
      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: output

  build_docker_image_debian_10:
    name: 'Build Docker image [debian-10]'
    runs-on: ubuntu-18.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image debian-10;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Build
        run: ./internal-scripts/ci-cd/build-docker-images/build.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-debian-10'
          IMAGE_TAG: '1'
          SOURCE_DIR: 'environments/debian-10'

      - name: Dump image
        run: ./internal-scripts/ci-cd/build-docker-images/dump-image.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-debian-10'
          IMAGE_TAG: '1'
      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: 'docker-image-debian-10'
          ARTIFACT_PATH: output

  build_docker_image_debian_9:
    name: 'Build Docker image [debian-9]'
    runs-on: ubuntu-18.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image debian-9;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Build
        run: ./internal-scripts/ci-cd/build-docker-images/build.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-debian-9'
          IMAGE_TAG: '2'
          SOURCE_DIR: 'environments/debian-9'

      - name: Dump image
        run: ./internal-scripts/ci-cd/build-docker-images/dump-image.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-debian-9'
          IMAGE_TAG: '2'
      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: 'docker-image-debian-9'
          ARTIFACT_PATH: output

  build_docker_image_ubuntu_18_04:
    name: 'Build Docker image [ubuntu-18.04]'
    runs-on: ubuntu-18.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image ubuntu-18.04;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Build
        run: ./internal-scripts/ci-cd/build-docker-images/build.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-ubuntu-18.04'
          IMAGE_TAG: '2'
          SOURCE_DIR: 'environments/ubuntu-18.04'

      - name: Dump image
        run: ./internal-scripts/ci-cd/build-docker-images/dump-image.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-ubuntu-18.04'
          IMAGE_TAG: '2'
      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: 'docker-image-ubuntu-18.04'
          ARTIFACT_PATH: output

  build_docker_image_ubuntu_20_04:
    name: 'Build Docker image [ubuntu-20.04]'
    runs-on: ubuntu-18.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image ubuntu-20.04;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Build
        run: ./internal-scripts/ci-cd/build-docker-images/build.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-ubuntu-20.04'
          IMAGE_TAG: '2'
          SOURCE_DIR: 'environments/ubuntu-20.04'

      - name: Dump image
        run: ./internal-scripts/ci-cd/build-docker-images/dump-image.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-ubuntu-20.04'
          IMAGE_TAG: '2'
      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: 'docker-image-ubuntu-20.04'
          ARTIFACT_PATH: output

  build_docker_image_utility:
    name: 'Build Docker image [utility]'
    runs-on: ubuntu-18.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image utility;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Build
        run: ./internal-scripts/ci-cd/build-docker-images/build.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-utility'
          IMAGE_TAG: '4'
          SOURCE_DIR: 'environments/utility'

      - name: Dump image
        run: ./internal-scripts/ci-cd/build-docker-images/dump-image.sh
        env:
          IMAGE_NAME: 'fullstaq/ruby-build-env-utility'
          IMAGE_TAG: '4'
      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: 'docker-image-utility'
          ARTIFACT_PATH: output



  ### Sources ###


  download_ruby_source_3_0_2:
    name: Download Ruby source [3.0.2]
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Download Ruby source 3.0.2;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Fetch cache
        id: fetch_cache
        uses: actions/cache@v1
        with:
          path: output
          key: v3-ruby-src-3.0.2

      - name: Download
        run: ./internal-scripts/ci-cd/download-ruby-sources/download.sh
        if: steps.fetch_cache.outputs.cache-hit != 'true'
        env:
          RUBY_VERSION: 3.0.2

      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.0.2
          ARTIFACT_PATH: output
  download_ruby_source_2_7_4:
    name: Download Ruby source [2.7.4]
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Download Ruby source 2.7.4;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Fetch cache
        id: fetch_cache
        uses: actions/cache@v1
        with:
          path: output
          key: v3-ruby-src-2.7.4

      - name: Download
        run: ./internal-scripts/ci-cd/download-ruby-sources/download.sh
        if: steps.fetch_cache.outputs.cache-hit != 'true'
        env:
          RUBY_VERSION: 2.7.4

      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-2.7.4
          ARTIFACT_PATH: output
  download_ruby_source_2_6_8:
    name: Download Ruby source [2.6.8]
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Download Ruby source 2.6.8;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Fetch cache
        id: fetch_cache
        uses: actions/cache@v1
        with:
          path: output
          key: v3-ruby-src-2.6.8

      - name: Download
        run: ./internal-scripts/ci-cd/download-ruby-sources/download.sh
        if: steps.fetch_cache.outputs.cache-hit != 'true'
        env:
          RUBY_VERSION: 2.6.8

      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-2.6.8
          ARTIFACT_PATH: output


  download_rbenv_source:
    name: Download Rbenv source
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
    if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Download Rbenv source;')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}
      - name: Prepare
        id: prepare
        run: ./internal-scripts/ci-cd/download-rbenv-source/prepare.sh
      - name: Fetch cache
        uses: actions/cache@v1
        with:
          path: output
          key: v2-rbenv-src-${{ steps.prepare.outputs.cache_key }}

      - name: Download
        run: ./internal-scripts/ci-cd/download-rbenv-source/download.sh
        env:
          RBENV_REPO_URL: ${{ steps.prepare.outputs.repo_url }}
          RBENV_REPO_REF: ${{ steps.prepare.outputs.ref }}

      - name: Archive artifact
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: rbenv-src
          ARTIFACT_PATH: output


  ### Finalize ###

  finalize:
    name: Finalize
    needs:
      - determine_necessary_jobs
      - check_workflow_uptodate
      - check_version_numbers_need_bumping
      - download_rbenv_source
      - build_docker_image_centos_7
      - build_docker_image_centos_8
      - build_docker_image_debian_10
      - build_docker_image_debian_9
      - build_docker_image_ubuntu_18_04
      - build_docker_image_ubuntu_20_04
      - build_docker_image_utility
      - download_ruby_source_3_0_2
      - download_ruby_source_2_7_4
      - download_ruby_source_2_6_8
    runs-on: ubuntu-20.04
    if: 'always()'
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}


      ### Publish all artifacts in Google Cloud as Github Actions artifacts ###
      # We publish these artifacts in a dedicated job instead
      # of in each job individually, because the individual jobs
      # could be skipped during a re-run.

      - name: Download Rbenv source artifact from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: rbenv-src
          ARTIFACT_PATH: artifacts
      - name: Archive Rbenv source artifact to Github
        uses: actions/upload-artifact@v2
        with:
          name: rbenv-src
          path: artifacts


      - name: Download Docker image artifact [centos-7] from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image centos-7;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-7'
          ARTIFACT_PATH: artifacts
          CLEAR: true
      - name: Archive Docker image artifact [centos-7] to Github
        uses: actions/upload-artifact@v2
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image centos-7;')
        with:
          name: 'docker-image-centos-7'
          path: artifacts
      - name: Download Docker image artifact [centos-8] from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image centos-8;')
        env:
          ARTIFACT_NAME: 'docker-image-centos-8'
          ARTIFACT_PATH: artifacts
          CLEAR: true
      - name: Archive Docker image artifact [centos-8] to Github
        uses: actions/upload-artifact@v2
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image centos-8;')
        with:
          name: 'docker-image-centos-8'
          path: artifacts
      - name: Download Docker image artifact [debian-10] from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image debian-10;')
        env:
          ARTIFACT_NAME: 'docker-image-debian-10'
          ARTIFACT_PATH: artifacts
          CLEAR: true
      - name: Archive Docker image artifact [debian-10] to Github
        uses: actions/upload-artifact@v2
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image debian-10;')
        with:
          name: 'docker-image-debian-10'
          path: artifacts
      - name: Download Docker image artifact [debian-9] from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image debian-9;')
        env:
          ARTIFACT_NAME: 'docker-image-debian-9'
          ARTIFACT_PATH: artifacts
          CLEAR: true
      - name: Archive Docker image artifact [debian-9] to Github
        uses: actions/upload-artifact@v2
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image debian-9;')
        with:
          name: 'docker-image-debian-9'
          path: artifacts
      - name: Download Docker image artifact [ubuntu-18.04] from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image ubuntu-18.04;')
        env:
          ARTIFACT_NAME: 'docker-image-ubuntu-18.04'
          ARTIFACT_PATH: artifacts
          CLEAR: true
      - name: Archive Docker image artifact [ubuntu-18.04] to Github
        uses: actions/upload-artifact@v2
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image ubuntu-18.04;')
        with:
          name: 'docker-image-ubuntu-18.04'
          path: artifacts
      - name: Download Docker image artifact [ubuntu-20.04] from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image ubuntu-20.04;')
        env:
          ARTIFACT_NAME: 'docker-image-ubuntu-20.04'
          ARTIFACT_PATH: artifacts
          CLEAR: true
      - name: Archive Docker image artifact [ubuntu-20.04] to Github
        uses: actions/upload-artifact@v2
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image ubuntu-20.04;')
        with:
          name: 'docker-image-ubuntu-20.04'
          path: artifacts
      - name: Download Docker image artifact [utility] from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image utility;')
        env:
          ARTIFACT_NAME: 'docker-image-utility'
          ARTIFACT_PATH: artifacts
          CLEAR: true
      - name: Archive Docker image artifact [utility] to Github
        uses: actions/upload-artifact@v2
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image utility;')
        with:
          name: 'docker-image-utility'
          path: artifacts


      - name: Download Ruby source artifact [3.0.2] from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-3.0.2
          ARTIFACT_PATH: artifacts
          CLEAR: true
      - name: Archive Ruby source artifact [3.0.2] to Github
        uses: actions/upload-artifact@v2
        with:
          name: ruby-src-3.0.2
          path: artifacts
      - name: Download Ruby source artifact [2.7.4] from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-2.7.4
          ARTIFACT_PATH: artifacts
          CLEAR: true
      - name: Archive Ruby source artifact [2.7.4] to Github
        uses: actions/upload-artifact@v2
        with:
          name: ruby-src-2.7.4
          path: artifacts
      - name: Download Ruby source artifact [2.6.8] from Google Cloud
        run: ./internal-scripts/ci-cd/download-artifact.sh
        env:
          ARTIFACT_NAME: ruby-src-2.6.8
          ARTIFACT_PATH: artifacts
          CLEAR: true
      - name: Archive Ruby source artifact [2.6.8] to Github
        uses: actions/upload-artifact@v2
        with:
          name: ruby-src-2.6.8
          path: artifacts


      ### Check whether dependent jobs failed ###
      # Only trigger next workflow if there are no failures.

      - name: Check whether 'Determine necessary jobs' succeeded
        run: 'false'
        if: needs.determine_necessary_jobs.result != 'success'
      - name: Check whether 'Check whether workflow is up-to-date' succeeded
        run: 'false'
        if: needs.check_workflow_uptodate.result != 'success'
      - name: Check whether 'Check whether any version numbers need to be changed' succeeded
        run: 'false'
        if: needs.check_version_numbers_need_bumping.result != 'success'
      - name: Check whether 'Download Rbenv source' did not fail
        run: 'false'
        if: |
          needs.download_rbenv_source.result != 'success'
          && (needs.download_rbenv_source.result != 'skipped'
            || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Download Rbenv source;'))
      - name: Check whether 'Build Docker image' did not fail
        run: 'false'
        if: |
          false
            || (needs.build_docker_image_centos_7.result != 'success'
              && (needs.build_docker_image_centos_7.result != 'skipped'
                || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image centos-7;')))
            || (needs.build_docker_image_centos_8.result != 'success'
              && (needs.build_docker_image_centos_8.result != 'skipped'
                || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image centos-8;')))
            || (needs.build_docker_image_debian_10.result != 'success'
              && (needs.build_docker_image_debian_10.result != 'skipped'
                || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image debian-10;')))
            || (needs.build_docker_image_debian_9.result != 'success'
              && (needs.build_docker_image_debian_9.result != 'skipped'
                || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image debian-9;')))
            || (needs.build_docker_image_ubuntu_18_04.result != 'success'
              && (needs.build_docker_image_ubuntu_18_04.result != 'skipped'
                || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image ubuntu-18.04;')))
            || (needs.build_docker_image_ubuntu_20_04.result != 'success'
              && (needs.build_docker_image_ubuntu_20_04.result != 'skipped'
                || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image ubuntu-20.04;')))
            || (needs.build_docker_image_utility.result != 'success'
              && (needs.build_docker_image_utility.result != 'skipped'
                || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image utility;')))
      - name: Check whether 'Download Ruby source' did not fail
        run: 'false'
        if: |
          false
            || (needs.download_ruby_source_3_0_2.result != 'success'
              && (needs.download_ruby_source_3_0_2.result != 'skipped'
                || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Download Ruby source 3.0.2;')))
            || (needs.download_ruby_source_2_7_4.result != 'success'
              && (needs.download_ruby_source_2_7_4.result != 'skipped'
                || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Download Ruby source 2.7.4;')))
            || (needs.download_ruby_source_2_6_8.result != 'success'
              && (needs.download_ruby_source_2_6_8.result != 'skipped'
                || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Download Ruby source 2.6.8;')))


      ### Trigger next workflow ###

      - name: Create check for 'Build packages'
        uses: LouisBrunner/checks-action@v1.1.0
        id: create_check
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Build packages
          status: queued

      - name: Trigger workflow for 'Build packages'
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: 'CI/CD: build packages'
          token: ${{ secrets.WORKFLOW_DISPATCH_TOKEN }}
          inputs: |
            {
              "ci_artifacts_run_number": "${{ env.CI_ARTIFACTS_RUN_NUMBER }}",
              "check_id": "${{ steps.create_check.outputs.check_id }}"
            }
