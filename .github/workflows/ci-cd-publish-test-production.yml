# WARNING: DO NOT EDIT THIS FILE!!!
#
# This file is autogenerated from .github/workflows/ci-cd-publish-test-production.yml.erb
# by ./internal-scripts/generate-ci-cd-yaml.rb.
# Please edit the .erb file instead, then regenerate YAML
# by running that script.
#
# TIP: run this on your development machine to ensure generate-ci-cd-yaml.rb
# is run automatically as a Git pre-commit hook:
#
#   git config core.hooksPath .githooks

name: 'CI/CD: publish & test against production repos'

on:
  workflow_dispatch:
    inputs:
      ci_artifacts_run_number:
        required: false
      check_id:
        required: false

env:
  GCLOUD_PROJECT: fullstaq-ruby
  CI_ARTIFACTS_BUCKET: fullstaq-ruby-server-edition-ci-artifacts
  CI_ARTIFACTS_RUN_NUMBER: ${{ github.event.inputs.ci_artifacts_run_number || github.run_number }}

jobs:
  # Determines which jobs should be run, or (in case this is a re-run)
  # which jobs can be skipped this time because the last run succeeded.
  # We determine this by checking whether the artifacts produced by jobs
  # exist in this run.
  determine_necessary_jobs:
    name: Determine necessary jobs
    runs-on: ubuntu-20.04
    permissions:
      checks: write
    outputs:
      necessary_jobs: ${{ steps.check.outputs.necessary_jobs }}
    steps:
      - name: Dump inputs
        run: echo "$INPUTS"
        env:
          INPUTS: ${{ toJSON(github.event.inputs) }}

      - name: Mark check as 'in progress'
        uses: LouisBrunner/checks-action@3d24d4813a797720cc4e2080a50bdafb3373aef1
        if: github.event.inputs.check_id
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          check_id: ${{ github.event.inputs.check_id }}
          status: in_progress
          details_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          output: |
            {
              "summary": "Packages are tested in another workflow.\n[**âžœ See workflow run #${{ github.run_id }} for logs**](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            }

      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: List artifacts built in previous try of same CI run
        run: ./internal-scripts/ci-cd/determine-necessary-jobs/list-artifacts.sh

      - name: Determine necessary jobs
        id: check
        run: ./internal-scripts/ci-cd/determine-necessary-jobs/determine-necessary-jobs.rb


  ### Publish ###

  publish:
    name: Publish packages
    runs-on: ubuntu-20.04
    environment: Production repos
    needs:
      - determine_necessary_jobs
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}
      - name: Set Google Cloud project
        run: gcloud config set core/project ${{ env.GCLOUD_PROJECT }}

      - name: Download artifacts
        run: ./internal-scripts/ci-cd/download-artifacts.sh
        env:
          ARTIFACT_NAMES: |
            common-deb
            common-rpm
            rbenv-deb
            rbenv-rpm
            ruby-pkg_3.0_centos-8_normal ruby-pkg_3.0_ubuntu-20.04_normal ruby-pkg_3.0.2_centos-8_normal ruby-pkg_3.0.2_ubuntu-20.04_normal
          ARTIFACT_PATH: pkgs

      - name: Download Docker image necessary for publishing
        run: ./internal-scripts/ci-cd/download-artifact.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Docker image absent in registry utility;')
        env:
          ARTIFACT_NAME: docker-image-utility
          ARTIFACT_PATH: .
      - name: Load Docker image necessary for publishing
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Docker image absent in registry utility;')
        env:
          TARBALL: image.tar.zst
      - name: Install Aptly
        run: ./internal-scripts/ci-cd/publish/install-aptly.sh

      - name: Determine latest release tag
        # Sets environment variable $LATEST_RELEASE_TAG
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/determine-latest-release-tag.sh

      - name: Upload DEBs to repo
        run: ./internal-scripts/ci-cd/publish/publish-debs.rb pkgs/*/*.deb
        env:
          PRODUCTION_REPO_BUCKET_NAME: fullstaq-ruby-server-edition-apt-repo
          CI_ARTIFACTS_BUCKET_NAME: ${{ env.CI_ARTIFACTS_BUCKET }}
          TESTING: false
          OVERWRITE_EXISTING: false
          DRY_RUN: ${{ github.ref != 'refs/heads/main' }}
      - name: Upload RPMs to repo
        run: ./internal-scripts/ci-cd/publish/publish-rpms.rb pkgs/*/*.rpm
        env:
          PRODUCTION_REPO_BUCKET_NAME: fullstaq-ruby-server-edition-yum-repo
          CI_ARTIFACTS_BUCKET_NAME: ${{ env.CI_ARTIFACTS_BUCKET }}
          TESTING: false
          OVERWRITE_EXISTING: false
          DRY_RUN: ${{ github.ref != 'refs/heads/main' }}


  ### Run tests ###



  test_centos_8-3_0-normal:
    name: 'Test [centos-8/3.0/normal]'
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
      - publish
    if: |
      github.ref == 'refs/heads/main'
      && contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against production repo [centos-8/3.0/normal];')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Run tests
        run: ./internal-scripts/ci-cd/test-packages/run-tests.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          RUBY_PACKAGE_ID: "3.0"
          PACKAGE_FORMAT: "RPM"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          TEST_IMAGE_NAME: "centos:8"
          APT_REPO_URL: https://apt.fullstaqruby.org
          YUM_REPO_URL: https://yum.fullstaqruby.org

      - name: Create mark file
        run: mkdir mark-normal && touch mark-normal/done.txt
      - name: Mark job as done
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: tested-against-production-centos-8_3.0_normal
          ARTIFACT_PATH: mark-normal
  test_centos_8-3_0_2-normal:
    name: 'Test [centos-8/3.0.2/normal]'
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
      - publish
    if: |
      github.ref == 'refs/heads/main'
      && contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against production repo [centos-8/3.0.2/normal];')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Run tests
        run: ./internal-scripts/ci-cd/test-packages/run-tests.sh
        env:
          DISTRIBUTION_NAME: "centos-8"
          RUBY_PACKAGE_ID: "3.0.2"
          PACKAGE_FORMAT: "RPM"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          TEST_IMAGE_NAME: "centos:8"
          APT_REPO_URL: https://apt.fullstaqruby.org
          YUM_REPO_URL: https://yum.fullstaqruby.org

      - name: Create mark file
        run: mkdir mark-normal && touch mark-normal/done.txt
      - name: Mark job as done
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: tested-against-production-centos-8_3.0.2_normal
          ARTIFACT_PATH: mark-normal

  test_ubuntu_20_04-3_0-normal:
    name: 'Test [ubuntu-20.04/3.0/normal]'
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
      - publish
    if: |
      github.ref == 'refs/heads/main'
      && contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against production repo [ubuntu-20.04/3.0/normal];')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Run tests
        run: ./internal-scripts/ci-cd/test-packages/run-tests.sh
        env:
          DISTRIBUTION_NAME: "ubuntu-20.04"
          RUBY_PACKAGE_ID: "3.0"
          PACKAGE_FORMAT: "DEB"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          TEST_IMAGE_NAME: "ubuntu:20.04"
          APT_REPO_URL: https://apt.fullstaqruby.org
          YUM_REPO_URL: https://yum.fullstaqruby.org

      - name: Create mark file
        run: mkdir mark-normal && touch mark-normal/done.txt
      - name: Mark job as done
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: tested-against-production-ubuntu-20.04_3.0_normal
          ARTIFACT_PATH: mark-normal
  test_ubuntu_20_04-3_0_2-normal:
    name: 'Test [ubuntu-20.04/3.0.2/normal]'
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
      - publish
    if: |
      github.ref == 'refs/heads/main'
      && contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against production repo [ubuntu-20.04/3.0.2/normal];')
    steps:
      - uses: actions/checkout@v2
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Run tests
        run: ./internal-scripts/ci-cd/test-packages/run-tests.sh
        env:
          DISTRIBUTION_NAME: "ubuntu-20.04"
          RUBY_PACKAGE_ID: "3.0.2"
          PACKAGE_FORMAT: "DEB"
          VARIANT_NAME: "normal"
          VARIANT_PACKAGE_SUFFIX: ""
          TEST_IMAGE_NAME: "ubuntu:20.04"
          APT_REPO_URL: https://apt.fullstaqruby.org
          YUM_REPO_URL: https://yum.fullstaqruby.org

      - name: Create mark file
        run: mkdir mark-normal && touch mark-normal/done.txt
      - name: Mark job as done
        run: ./internal-scripts/ci-cd/upload-artifact.sh
        env:
          ARTIFACT_NAME: tested-against-production-ubuntu-20.04_3.0.2_normal
          ARTIFACT_PATH: mark-normal


  ### Finalize ###

  finalize:
    name: Finalize
    runs-on: ubuntu-20.04
    environment: Github releases
    permissions:
      contents: write
      checks: write
    needs:
      - determine_necessary_jobs
      - publish
      - test_centos_8-3_0-normal
      - test_centos_8-3_0_2-normal
      - test_ubuntu_20_04-3_0-normal
      - test_ubuntu_20_04-3_0_2-normal
    if: 'always()'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0


      ### Check whether dependent jobs failed ###
      # Only trigger next workflow if there are no failures.

      - name: Check whether 'Determine necessary jobs' succeeded
        run: 'false'
        if: needs.determine_necessary_jobs.result != 'success'

      - name: Check whether 'Test [centos-8/3.0/normal]' did not fail
        run: 'false'
        if: |
          github.ref == 'refs/heads/main'
          && needs.test_centos_8-3_0-normal.result != 'success'
          && (needs.test_centos_8-3_0-normal.result != 'skipped'
            || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against production repo [centos-8/3.0/normal];'))
      - name: Check whether 'Test [centos-8/3.0.2/normal]' did not fail
        run: 'false'
        if: |
          github.ref == 'refs/heads/main'
          && needs.test_centos_8-3_0_2-normal.result != 'success'
          && (needs.test_centos_8-3_0_2-normal.result != 'skipped'
            || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against production repo [centos-8/3.0.2/normal];'))
      - name: Check whether 'Test [ubuntu-20.04/3.0/normal]' did not fail
        run: 'false'
        if: |
          github.ref == 'refs/heads/main'
          && needs.test_ubuntu_20_04-3_0-normal.result != 'success'
          && (needs.test_ubuntu_20_04-3_0-normal.result != 'skipped'
            || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against production repo [ubuntu-20.04/3.0/normal];'))
      - name: Check whether 'Test [ubuntu-20.04/3.0.2/normal]' did not fail
        run: 'false'
        if: |
          github.ref == 'refs/heads/main'
          && needs.test_ubuntu_20_04-3_0_2-normal.result != 'success'
          && (needs.test_ubuntu_20_04-3_0_2-normal.result != 'skipped'
            || contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against production repo [ubuntu-20.04/3.0.2/normal];'))


      ### Create Git tag ###

      - name: Determine latest release version
        # Sets environment variable $LATEST_RELEASE_TAG
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/determine-latest-release-tag.sh

      - name: Determine next epic version
        # Sets environment variable $NEXT_RELEASE_VERSION
        run: ./internal-scripts/ci-cd/create-git-tag/determine-next-epic-version.sh

      - name: Create Git tag
        run: git tag epic-${{ env.NEXT_RELEASE_VERSION }}

      - name: Push Git tag
        if: github.ref == 'refs/heads/main'
        run: git push origin epic-${{ env.NEXT_RELEASE_VERSION }}


      ### Update own check status ###

      - name: Mark check as 'success'
        uses: LouisBrunner/checks-action@3d24d4813a797720cc4e2080a50bdafb3373aef1
        if: 'github.event.inputs.check_id && success()'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          check_id: ${{ github.event.inputs.check_id }}
          conclusion: success

      - name: Mark check as 'failure'
        uses: LouisBrunner/checks-action@3d24d4813a797720cc4e2080a50bdafb3373aef1
        if: 'github.event.inputs.check_id && failure()'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          check_id: ${{ github.event.inputs.check_id }}
          conclusion: failure

      - name: Mark check as 'cancelled'
        uses: LouisBrunner/checks-action@3d24d4813a797720cc4e2080a50bdafb3373aef1
        if: 'github.event.inputs.check_id && cancelled()'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          check_id: ${{ github.event.inputs.check_id }}
          conclusion: cancelled
