#!/bin/bash
set -e

SELFDIR=$(dirname "$0")
SELFDIR=$(cd "$SELFDIR" && pwd)
# shellcheck source=lib/library.sh
source "$SELFDIR/../lib/library.sh"

RUBY_SRC_CONTAINER_DIR=/home/builder/ruby-src
DESTDIR=/home/builder/ruby-inst
INPUT_PATH=/input/ruby-src.tar.gz
OUTPUT_PATH=/output/ruby-bin.tar.gz

require_container_mount "$INPUT_PATH"
require_container_mount "$OUTPUT_PATH"
require_container_envvar PACKAGE_VERSION
require_container_envvar VARIANT
require_container_envvar ENVIRONMENT_NAME
if [[ "$VARIANT" != normal ]]; then
    VARIANT_SUFFIX="-$VARIANT"
fi
if [[ "$VARIANT" = jemalloc ]]; then
    JEMALLOC_BIN_TARBALL_PATH=/input/jemalloc-bin.tar.gz
    require_container_mount "$JEMALLOC_BIN_TARBALL_PATH"
fi

BUILD_CONCURRENCY="${BUILD_CONCURRENCY:-4}"
INSTALL_PREFIX="/usr/lib/fullstaq-ruby/versions/$PACKAGE_VERSION$VARIANT_SUFFIX"


if [[ "$VARIANT" = jemalloc ]]; then
    JEMALLOC_DIR=/home/builder/jemalloc
    export C_INCLUDE_PATH="$JEMALLOC_DIR/include"
    export CPLUS_INCLUDE_PATH="$JEMALLOC_DIR/include"
    export LIBRARY_PATH="$JEMALLOC_DIR/lib"
    export LD_LIBRARY_PATH="$JEMALLOC_DIR/lib"
fi
export LD_RUN_PATH="$INSTALL_PREFIX/lib"


header "Setting up..."
if [[ -n "$CACHE_CONTAINER" ]]; then
    echo "+ Caching enabled, will cache to Azure Blob Storage container $CACHE_CONTAINER."
    require_container_mount /azure-connection-string.txt
    SCCACHE_AZURE_CONNECTION_STRING=$(cat /azure-connection-string.txt)
    export SCCACHE_AZURE_CONNECTION_STRING
    export SCCACHE_AZURE_BLOB_CONTAINER="$CACHE_CONTAINER"
    export SCCACHE_AZURE_KEY_PREFIX="$CACHE_KEY_PREFIX"
    export SCCACHE_ERROR_LOG=/proc/$$/fd/2
    SCCACHE_START_SERVER=1 sccache
    export PATH="/usr/local/lib/sccache:$PATH"
    echo "+ Activating ccache compilers in /usr/local/lib/sccache."
else
    echo "+ Caching disabled, not using sccache."
fi
echo


if [[ "$VARIANT" = jemalloc ]]; then
    header "Extracting Jemalloc binaries..."
    run mkdir "$JEMALLOC_DIR"
    run tar -xzf "$JEMALLOC_BIN_TARBALL_PATH" -C "$JEMALLOC_DIR"
    JEMALLOC_ENVIRONMENT_NAME=$(cat "$JEMALLOC_DIR/ENVIRONMENT")
    echo "+ Detected build environment in which Jemalloc was built: $JEMALLOC_ENVIRONMENT_NAME"
    if [[ "$JEMALLOC_ENVIRONMENT_NAME" != "$ENVIRONMENT_NAME" ]]; then
        echo "ERROR: we are currently in environment $ENVIRONMENT_NAME, but Jemalloc was built in another environment." >&2
        exit 1
    fi
    echo
fi


header "Extracting Ruby sources..."
run mkdir "$RUBY_SRC_CONTAINER_DIR"
run tar -xzf "$INPUT_PATH" -C "$RUBY_SRC_CONTAINER_DIR"

# shellcheck disable=SC2012
subdir="$(ls -1 "$RUBY_SRC_CONTAINER_DIR" | head -n 1)"
echo "+ cd $RUBY_SRC_CONTAINER_DIR/$subdir"
cd "$RUBY_SRC_CONTAINER_DIR/$subdir"
echo


header "Configuring and compiling Ruby..."
if [[ "$VARIANT" = jemalloc ]]; then
    EXTRA_CONFIGURE_ARGS=(--with-jemalloc)
    if [[ "$PACKAGE_VERSION" =~ ^2\. || "$PACKAGE_VERSION" =~ ^3\.0 ]]; then
        run patch -p1 -ti /system/resources/ruby_26_jemalloc.patch
    else
        run patch -p1 -ti /system/resources/ruby_31_jemalloc.patch
    fi
elif [[ "$VARIANT" = malloctrim ]]; then
    EXTRA_CONFIGURE_ARGS=()
    run patch -p1 -ti /system/resources/ruby_malloctrim.patch
    if [[ "$PACKAGE_VERSION" =~ ^2\. || "$PACKAGE_VERSION" =~ ^3\.0 ]]; then
        run patch -p1 -ti /system/resources/ruby_26_malloctrim.patch
    else
        run patch -p1 -ti /system/resources/ruby_31_malloctrim.patch
    fi
else
    EXTRA_CONFIGURE_ARGS=()
fi
run ./configure --prefix="$INSTALL_PREFIX" \
    --enable-shared --disable-install-static-library \
    --disable-install-rdoc "${EXTRA_CONFIGURE_ARGS[@]}"
run make "-j$BUILD_CONCURRENCY"
echo


header "Creating install directory structure..."
run make install DESTDIR="$DESTDIR"

run strip --strip-all "$DESTDIR/$INSTALL_PREFIX/bin/ruby"
echo "+ find $DESTDIR/$INSTALL_PREFIX -name '*.so' -print0 | xargs -0 strip --strip-debug"
set -o pipefail
find "$DESTDIR/$INSTALL_PREFIX" -name '*.so' -print0 | xargs -0 strip --strip-debug

run rm -rf "$DESTDIR/$INSTALL_PREFIX/share/man"
run mkdir -p "$DESTDIR/usr/lib/rbenv/versions"
run ln -s "$INSTALL_PREFIX" "$DESTDIR/usr/lib/rbenv/versions/$PACKAGE_VERSION$VARIANT_SUFFIX"

ABI_VERSION=$(ls "$DESTDIR/$INSTALL_PREFIX/lib/ruby/site_ruby")

if [[ "$VARIANT" = jemalloc ]]; then
    run cp -R "$JEMALLOC_DIR"/include/jemalloc "$DESTDIR/$INSTALL_PREFIX/include/ruby-$ABI_VERSION"/
    run cp -d "$JEMALLOC_DIR"/lib/libjemalloc* "$DESTDIR/$INSTALL_PREFIX"/lib/
fi

run rm -f "$DESTDIR/$INSTALL_PREFIX"/lib/*.a

echo


if [[ -e /etc/debian_version ]]; then
    header "Autodetecting package dependencies..."
    PLATFORM_NAME=$(ls "$DESTDIR/$INSTALL_PREFIX/lib/ruby/vendor_ruby/$ABI_VERSION")
    export LD_LIBRARY_PATH="$DESTDIR/$INSTALL_PREFIX/lib"
    export RUBYPATH="$DESTDIR/$INSTALL_PREFIX/bin"
    export RUBYLIB="$DESTDIR/$INSTALL_PREFIX/lib/ruby/$ABI_VERSION:$DESTDIR/$INSTALL_PREFIX/lib/ruby/$ABI_VERSION/$PLATFORM_NAME"

    echo "+ $RUBYPATH/ruby /system/internal-scripts/autodetect-shlib-dependencies $DESTDIR | tee $DESTDIR/shlib-deps.txt"
    "$RUBYPATH/ruby" /system/internal-scripts/autodetect-shlib-dependencies "$DESTDIR" | tee "$DESTDIR/shlib-deps.txt"
    echo
fi


header "Packaging up..."
echo "+ echo $PACKAGE_VERSION > $DESTDIR/PACKAGE_VERSION"
echo "$PACKAGE_VERSION" > "$DESTDIR/PACKAGE_VERSION"
echo "+ echo $VARIANT > $DESTDIR/VARIANT"
echo "$VARIANT" > "$DESTDIR/VARIANT"
echo "+ echo $ENVIRONMENT_NAME > $DESTDIR/ENVIRONMENT"
echo "$ENVIRONMENT_NAME" > "$DESTDIR/ENVIRONMENT"
run tar -czf "$OUTPUT_PATH" -C "$DESTDIR" .
if [[ -n "$CACHE_CONTAINER" ]]; then
    run sccache --stop-server
fi
